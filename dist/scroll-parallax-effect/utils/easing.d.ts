export declare const easing: {
    linear: (t: number, b: number, c: number) => number;
    easeInQuad: (i: number, b: number, c: number, d?: number) => number;
    easeOutQuad: (i: number, b: number, c: number, d?: number) => number;
    easeInOutQuad: (i: number, b: number, c: number, d?: number) => number;
    easeInCubic: (i: number, b: number, c: number, d?: number) => number;
    easeOutCubic: (i: number, b: number, c: number, d?: number) => number;
    easeInOutCubic: (i: number, b: number, c: number, d?: number) => number;
    easeInQuart: (i: number, b: number, c: number, d?: number) => number;
    easeOutQuart: (i: number, b: number, c: number, d?: number) => number;
    easeInOutQuart: (i: number, b: number, c: number, d?: number) => number;
    easeInQuint: (i: number, b: number, c: number, d?: number) => number;
    easeOutQuint: (i: number, b: number, c: number, d?: number) => number;
    easeInOutQuint: (i: number, b: number, c: number, d?: number) => number;
    easeInSine: (i: number, b: number, c: number, d?: number) => number;
    easeOutSine: (i: number, b: number, c: number, d?: number) => number;
    easeInOutSine: (i: number, b: number, c: number, d?: number) => number;
    easeInExpo: (i: number, b: number, c: number, d?: number) => number;
    easeOutExpo: (i: number, b: number, c: number, d?: number) => number;
    easeInOutExpo: (i: number, b: number, c: number, d?: number) => number;
    easeInCirc: (i: number, b: number, c: number, d?: number) => number;
    easeOutCirc: (i: number, b: number, c: number, d?: number) => number;
    easeInOutCirc: (i: number, b: number, c: number, d?: number) => number;
    easeInElastic: (m: number, p: number, a: number, b: number) => number;
    easeOutElastic: (m: number, p: number, a: number, b: number) => number;
    easeInOutElastic: (m: number, p: number, a: number, b: number) => number;
    easeInBack: (k: number, b: number, c: number, d: number, j: number) => number;
    easeOutBack: (k: number, b: number, c: number, d: number, j: number) => number;
    easeInOutBack: (k: number, b: number, c: number, d: number, j: number) => number;
    easeInBounce: (i: number, b: number, c: number, d?: number) => number;
    easeOutBounce: (i: number, b: number, c: number, d?: number) => number;
    easeInOutBounce: (i: number, b: number, c: number, d?: number) => number;
};
export declare type EasingFunction = ((i: number, b: number, c: number, d?: number) => number);
export declare type Easing = (keyof typeof easing) | ((i: number, b: number, c: number, d?: number) => number);
